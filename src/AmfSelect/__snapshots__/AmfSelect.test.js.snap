// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AmfSelect with custom selector 1`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": undefined,
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;

exports[`AmfSelect with empty validation object 1`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": undefined,
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;

exports[`AmfSelect with empty value 1`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": undefined,
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "red",
        "margin": 4,
        "marginBottom": 0,
      }
    }
  >
    undefined harus dipilih
  </Text>
</View>
`;

exports[`AmfSelect with horizontal layout 1`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": undefined,
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;

exports[`AmfSelect with label 1`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": "Label",
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;

exports[`AmfSelect with label 2`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": "Label",
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;

exports[`AmfSelect with required validation 1`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": undefined,
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;

exports[`AmfSelect with required validation 2`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": undefined,
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={1}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;

exports[`AmfSelect with unmatch value 1`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": undefined,
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;

exports[`AmfSelect without validation 1`] = `
<View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": undefined,
            "textColor": undefined,
            "value": undefined,
          },
          Object {
            "label": "foo",
            "textColor": undefined,
            "value": "foo",
          },
          Object {
            "label": "bar",
            "textColor": undefined,
            "value": "bar",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#4b6ac5",
        "borderColor": "#4b6ac5",
        "borderStyle": "solid",
        "height": 3,
      }
    }
  />
</View>
`;
