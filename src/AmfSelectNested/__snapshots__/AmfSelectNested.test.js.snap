// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AmfSelectNested simple render 1`] = `
<View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            >
              
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={
                Array [
                  Object {
                    "label": "foo",
                    "value": "foo",
                  },
                  Object {
                    "label": "bar",
                    "value": "bar",
                  },
                ]
              }
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 96,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={0}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  foo
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={1}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  bar
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={Array []}
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 16,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;

exports[`AmfSelectNested with empty validation object 1`] = `
<View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            >
              Label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={
                Array [
                  Object {
                    "label": "foo",
                    "value": "foo",
                  },
                  Object {
                    "label": "bar",
                    "value": "bar",
                  },
                ]
              }
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 96,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={0}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  foo
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={1}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  bar
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={Array []}
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 16,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;

exports[`AmfSelectNested with empty value 1`] = `
<View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            >
              Label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={
                Array [
                  Object {
                    "label": "foo",
                    "value": "foo",
                  },
                  Object {
                    "label": "bar",
                    "value": "bar",
                  },
                ]
              }
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 96,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={0}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  foo
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={1}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  bar
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={Array []}
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 16,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;

exports[`AmfSelectNested with label 1`] = `
<View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            >
              Label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={
                Array [
                  Object {
                    "label": "foo",
                    "value": "foo",
                  },
                  Object {
                    "label": "bar",
                    "value": "bar",
                  },
                ]
              }
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 96,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={0}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  foo
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={1}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  bar
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={Array []}
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 16,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;

exports[`AmfSelectNested with label 2`] = `
<View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            >
              Label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={
                Array [
                  Object {
                    "label": "foo",
                    "value": "foo",
                  },
                  Object {
                    "label": "bar",
                    "value": "bar",
                  },
                ]
              }
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 96,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={0}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  foo
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={1}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  bar
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={Array []}
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 16,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;

exports[`AmfSelectNested with unmatch value 1`] = `
<View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 36,
              }
            }
          >
            <Text
              accessible={true}
              active={false}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 16,
                }
              }
            >
              Label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={
                Array [
                  Object {
                    "label": "foo",
                    "value": "foo",
                  },
                  Object {
                    "label": "bar",
                    "value": "bar",
                  },
                ]
              }
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 96,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={0}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  foo
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                focusAnimation={null}
                focusAnimationDuration={225}
                fontSize={16}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                index={1}
                nativeID={undefined}
                onLayout={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={256}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "height": 40,
                    "justifyContent": "center",
                    "paddingLeft": undefined,
                    "paddingRight": undefined,
                    "paddingVertical": 8,
                  }
                }
                testID={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                      },
                    ]
                  }
                >
                  bar
                </Text>
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .38)",
                      "borderRadius": 0,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
  <View
    onLayout={[Function]}
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={undefined}
      testID={undefined}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 8,
              "paddingTop": 32,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "position": "absolute",
                "top": 16,
              }
            }
          >
            <Text
              accessible={true}
              active={true}
              allowFontScaling={true}
              animationDuration={128}
              collapsable={undefined}
              disabled={false}
              ellipsizeMode="tail"
              errored={false}
              focused={false}
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 12,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              blurOnSubmit={true}
              data={Array []}
              disableFullscreenUI={true}
              editable={false}
              error={undefined}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              keyboardType={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              renderAccessory={[Function]}
              returnKeyType={undefined}
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              value="No Match"
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                disabled={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={256}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 48,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 1334,
            "width": 750,
          }
        }
        testID={undefined}
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderRadius": 2,
              "height": 16,
              "left": undefined,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "rgba(0, 0, 0, 1.0)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.54,
              "shadowRadius": 2,
              "top": undefined,
              "transform": Array [
                Object {
                  "translateY": -48,
                },
              ],
              "width": undefined,
            }
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            scrollEnabled={false}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;
